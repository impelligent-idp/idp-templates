apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: react-frontend
  title: React Frontend Application
  description: Create a new React frontend with Nginx, CI/CD, Ingress, and Kubernetes deployment
  tags:
    - react
    - frontend
    - web
    - recommended
spec:
  owner: platform-team
  type: website
  
  parameters:
    - title: Application Information
      required:
        - name
        - description
        - owner
      properties:
        name:
          title: Name
          type: string
          description: Unique name for this frontend app
          pattern: '^[a-z0-9-]+$'
          ui:autofocus: true
        description:
          title: Description
          type: string
        owner:
          title: Owner
          type: string
          ui:field: OwnerPicker
    
    - title: Configuration
      properties:
        namespace:
          title: Kubernetes Namespace
          type: string
          default: default
        subdomain:
          title: Subdomain
          type: string
          description: Subdomain for accessing the app (e.g., my-app.impelligent-idp.local)
          pattern: '^[a-z0-9-]+$'
    
    - title: Repository
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - impelligent-idp

  steps:
    - id: fetch-base
      name: Fetch Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          namespace: ${{ parameters.namespace }}
          subdomain: ${{ parameters.subdomain or parameters.name }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          
    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repoUrl }}
        
    - id: register
      name: Register in Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
    
    - id: create-argocd-app
      name: Deploy with ArgoCD
      action: debug:log
      input:
        message: |
          ðŸ“¦ ArgoCD application manifest created in repository.
          
          To deploy your application, run:
          kubectl apply -f https://raw.githubusercontent.com/${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}/main/argocd/application.yaml
    
    - id: trigger-build
      name: Trigger Initial Build & Deploy
      action: github:actions:dispatch
      input:
        workflowId: deploy.yaml
        repoUrl: ${{ parameters.repoUrl }}
        branchOrTagName: main
        workflowInputs: {}
    
    - id: wait-for-workflow
      name: Wait for Build
      action: debug:wait
      input:
        seconds: 5

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
        icon: github
      - title: Open in Backstage
        entityRef: ${{ steps.register.output.entityRef }}
        icon: catalog
      - title: View Application
        url: http://${{ parameters.subdomain or parameters.name }}.impelligent-idp.local
        icon: dashboard
      - title: View in ArgoCD
        url: http://argocd.impelligent-idp.local/applications/${{ parameters.name }}
        icon: dashboard
      - title: GitHub Actions
        url: ${{ steps.publish.output.remoteUrl }}/actions
        icon: github

