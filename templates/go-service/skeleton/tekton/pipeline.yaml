apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ${{values.name}}-pipeline
  namespace: ${{values.namespace}}
spec:
  params:
    - name: repo-url
      type: string
      description: The git repository URL
      default: https://github.com/${{values.destination.owner}}/${{values.destination.repo}}
    - name: revision
      type: string
      description: The git revision to build
      default: main
    - name: image-name
      type: string
      description: The image name to build
      default: ghcr.io/${{values.destination.owner}}/${{values.name}}
  
  workspaces:
    - name: shared-data
    - name: git-credentials
  
  tasks:
    - name: fetch-source
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-data
        - name: ssh-directory
          workspace: git-credentials
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.revision)
    
    - name: run-tests
      runAfter: ["fetch-source"]
      taskRef:
        name: golang-test
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: package
          value: ./...
    
    - name: build-image
      runAfter: ["run-tests"]
      taskRef:
        name: buildah
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: IMAGE
          value: $(params.image-name):$(params.revision)
        - name: DOCKERFILE
          value: ./Dockerfile
    
    - name: deploy
      runAfter: ["build-image"]
      taskRef:
        name: kubectl-apply
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: manifest
          value: k8s/
        - name: namespace
          value: ${{values.namespace}}
---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: ${{values.name}}-run-$(uid)
  namespace: ${{values.namespace}}
spec:
  pipelineRef:
    name: ${{values.name}}-pipeline
  workspaces:
    - name: shared-data
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    - name: git-credentials
      secret:
        secretName: github-token

